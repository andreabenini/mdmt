#!/usr/bin/env bash
#
# Script for generating project documentation
# @see      The first use for this script is the generation of its own documentation
#           Take it as a sample of what you can practically do with it, feel free to adapt
#           to your own needs. A bare copy of the test unit script with small adaptations.
#
# @author   Ben <Andrea Benini>.  Email on github website for details
# @see      https://github.com/andreabenini/mdmt
#

# Exit when a command fails
set -e
trap 'catch $? $LINENO' ERR
catch() {
    echo "ERROR: $1. Line: $2"
}

# README.md, adding latest info
cp logo.png doc/
sed -i '/^<!--DISCLAIMER-->$/,$d' README.md
cat << EOT >> README.md
<!--DISCLAIMER-->
&nbsp;  
&nbsp;  
&nbsp;  
&nbsp;  
&nbsp;  
&nbsp;  
&nbsp;  
&nbsp;  

***NOTE:*** This _PDF_ document is a practical example of what \`mdmt\` could do.  
This user manual has been generated by joining all markdown files in this git project repository

# Usage
\`\`\`sh
$ ./mdmt --help
$(./mdmt --help)
\`\`\`
EOT

# Document generation
echo -e "\n\033[0;96mGenerating project manual \033[0;90m"

echo -e "- HTML format"
cat << EOT  | ./mdmt --input-list - --output=doc/README.html --template=templates/mdmt.css
README.md
doc/examples.md
TODO.md
CHANGELOG.md
EOT

echo -e "- PDF format"
./mdmt --input=doc/README.html --output=doc/README.pdf


echo -e "\n\033[0;32m- - - -   COMPLETED   - - - -\033[0;37m\n"
